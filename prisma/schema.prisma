// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

enum UserStatus {
  ACTIVE
  DEACTIVATED
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model CartItem {
  id        String  @id @default(uuid()) @map("_id")
  userId    String 
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  quantity  Int     @default(1)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String   @id @default(cuid()) @map("_id")
  name        String
  description String?
  category    String
  price       Float
  imageUrl    String?
  userId      String
  downloadUrl String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  supplierId String?
  supplier   Supplier?   @relation(fields: [supplierId], references: [id])
  
  CartItem   CartItem[]
  OrderItem  OrderItem[]
}

model Order {
  id        String   @id @default(uuid()) @map("_id")
  userId    String
  email     String
  total     Float
  status    String   @default("completed")
  createdAt DateTime @default(now())

  items OrderItem[] 
}

model OrderItem {
  id        String  @id @default(uuid()) @map("_id")
  userId    String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  quantity  Int
  price     Float
}

model AppUser {
  id            String     @id @default(uuid()) @map("_id") 
  email         String?
  displayName   String?
  authMethod    String? 
  status        UserStatus @default(ACTIVE)
  blockedAt     DateTime?
  blockReason   String?
  deactivatedAt DateTime?
  lastActiveAt  DateTime?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@index([email])
  @@index([status])
}

model Supplier {
  id       String  @id @default(uuid()) @map("_id")
  name     String
  email    String?
  phone    String?
  address  String?
  note     String?
  isActive Boolean @default(true)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products   Product[]
  @@index([name])
}
